class e extends Error{constructor(e){super(e),this.name="i18nify Error",this.timestamp=new Date}}const n=n=>function(...x){try{return n.call(this,...x)}catch(n){throw console.error("[i18nify Error]: ",n),new e(n)}};class x{constructor(){this.state={locale:"",direction:"",country:""}}static getInstance(){return x.instance||(x.instance=new x),x.instance}static resetInstance(){x.instance=void 0}getState(){return Object.assign({},this.state)}setState(e){this.state=Object.assign(Object.assign({},this.state),e)}resetState(){this.state={locale:"",direction:"",country:""}}}var r=x.getInstance();var t=n((()=>r.getState()));var o=n((e=>{r.setState(e)}));var a=n((()=>{r.resetState()}));const d=(e={})=>{let n=(null==e?void 0:e.locale)||r.getState().locale;if(n)return n;if("undefined"==typeof navigator)return"en-IN";if(window.Intl&&"object"==typeof window.Intl&&(window.navigator.languages||window.navigator.language)){return(window.navigator.languages||[window.navigator.language])[0]}return"en-IN"},i=(e={})=>{const n=d(e),x=(null==e?void 0:e.intlOptions)?Object.assign({},e.intlOptions):{};if(((null==e?void 0:e.currency)||x.currency)&&(x.style="currency",x.currency=e.currency||x.currency),!n)throw new Error(`The provided locale value is invalid. The received value was: ${n}. Please ensure you pass a correct locale string for proper formatting.`);return new Intl.NumberFormat(n||void 0,x)};var s={AFN:{name:"Afghani",minor_unit:"2",symbol:"؋"},EUR:{name:"Euro",minor_unit:"2",symbol:"€"},ALL:{name:"Lek",minor_unit:"2",symbol:"L"},DZD:{name:"Algerian Dinar",minor_unit:"2",symbol:"د.ج"},USD:{name:"US Dollar",minor_unit:"2",symbol:"$"},AOA:{name:"Kwanza",minor_unit:"2",symbol:"Kz"},XCD:{name:"East Caribbean Dollar",minor_unit:"2",symbol:"EC$"},ARS:{name:"Argentine Peso",minor_unit:"2",symbol:"ARS"},AMD:{name:"Armenian Dram",minor_unit:"2",symbol:"֏"},AWG:{name:"Aruban Florin",minor_unit:"2",symbol:"Aƒ"},AUD:{name:"Australian Dollar",minor_unit:"2",symbol:"A$"},AZN:{name:"Azerbaijan Manat",minor_unit:"2",symbol:"₼"},BSD:{name:"Bahamian Dollar",minor_unit:"2",symbol:"BSD"},BHD:{name:"Bahraini Dinar",minor_unit:"3",symbol:".د.ب"},BDT:{name:"Taka",minor_unit:"2",symbol:"৳"},BBD:{name:"Barbados Dollar",minor_unit:"2",symbol:"Bds$"},BYN:{name:"Belarusian Ruble",minor_unit:"2",symbol:"Rbl"},BZD:{name:"Belize Dollar",minor_unit:"2",symbol:"BZ$"},XOF:{name:"CFA Franc BCEAO",minor_unit:"0",symbol:"CFA"},BMD:{name:"Bermudian Dollar",minor_unit:"2",symbol:"BD$"},INR:{name:"Indian Rupee",minor_unit:"2",symbol:"₹"},BTN:{name:"Ngultrum",minor_unit:"2",symbol:"Nu."},BOB:{name:"Boliviano",minor_unit:"2",symbol:"Bs."},BOV:{name:"Mvdol",minor_unit:"2",symbol:"Bs"},BAM:{name:"Convertible Mark",minor_unit:"2",symbol:"KM"},BWP:{name:"Pula",minor_unit:"2",symbol:"P"},NOK:{name:"Norwegian Krone",minor_unit:"2",symbol:"kr"},BRL:{name:"Brazilian Real",minor_unit:"2",symbol:"R$"},BND:{name:"Brunei Dollar",minor_unit:"2",symbol:"B$"},BGN:{name:"Bulgarian Lev",minor_unit:"2",symbol:"лв."},BIF:{name:"Burundi Franc",minor_unit:"0",symbol:"FBu"},CVE:{name:"Cabo Verde Escudo",minor_unit:"2",symbol:"CVE"},KHR:{name:"Riel",minor_unit:"2",symbol:"៛"},XAF:{name:"CFA Franc BEAC",minor_unit:"0",symbol:"FCFA"},CAD:{name:"Canadian Dollar",minor_unit:"2",symbol:"CA$"},KYD:{name:"Cayman Islands Dollar",minor_unit:"2",symbol:"CI$"},CLP:{name:"Chilean Peso",minor_unit:"0",symbol:"CLP"},CLF:{name:"Unidad de Fomento",minor_unit:"4",symbol:"UF"},CNY:{name:"Yuan Renminbi",minor_unit:"2",symbol:"CN¥"},COP:{name:"Colombian Peso",minor_unit:"2",symbol:"COL$"},COU:{name:"Unidad de Valor Real",minor_unit:"2",symbol:"UVR"},KMF:{name:"Comorian Franc",minor_unit:"0",symbol:"CF"},CDF:{name:"Congolese Franc",minor_unit:"2",symbol:"FC"},NZD:{name:"New Zealand Dollar",minor_unit:"2",symbol:"NZ$"},CRC:{name:"Costa Rican Colon",minor_unit:"2",symbol:"₡"},HRK:{name:"Kuna",minor_unit:"2",symbol:"kn"},CUP:{name:"Cuban Peso",minor_unit:"2",symbol:"$MN"},CUC:{name:"Peso Convertible",minor_unit:"2",symbol:"CUC$"},ANG:{name:"Netherlands Antillean Guilder",minor_unit:"2",symbol:"ƒ"},CZK:{name:"Czech Koruna",minor_unit:"2",symbol:"Kč"},DKK:{name:"Danish Krone",minor_unit:"2",symbol:"kr"},DJF:{name:"Djibouti Franc",minor_unit:"0",symbol:"Fdj"},DOP:{name:"Dominican Peso",minor_unit:"2",symbol:"RD$"},EGP:{name:"Egyptian Pound",minor_unit:"2",symbol:"E£"},SVC:{name:"El Salvador Colon",minor_unit:"2",symbol:"₡"},ERN:{name:"Nakfa",minor_unit:"2",symbol:"Nfk"},SZL:{name:"Lilangeni",minor_unit:"2",symbol:"E"},ETB:{name:"Ethiopian Birr",minor_unit:"2",symbol:"Br"},FKP:{name:"Falkland Islands Pound",minor_unit:"2",symbol:"FK£"},FJD:{name:"Fiji Dollar",minor_unit:"2",symbol:"FJ$"},XPF:{name:"CFP Franc",minor_unit:"0",symbol:"F"},GMD:{name:"Dalasi",minor_unit:"2",symbol:"D"},GEL:{name:"Lari",minor_unit:"2",symbol:"₾"},GHS:{name:"Ghana Cedi",minor_unit:"2",symbol:"GH₵"},GIP:{name:"Gibraltar Pound",minor_unit:"2",symbol:"£"},GTQ:{name:"Quetzal",minor_unit:"2",symbol:"Q"},GBP:{name:"Pound Sterling",minor_unit:"2",symbol:"£"},GNF:{name:"Guinean Franc",minor_unit:"0",symbol:"FG"},GYD:{name:"Guyana Dollar",minor_unit:"2",symbol:"GY$"},HTG:{name:"Gourde",minor_unit:"2",symbol:"G"},HNL:{name:"Lempira",minor_unit:"2",symbol:"L"},HKD:{name:"Hong Kong Dollar",minor_unit:"2",symbol:"HK$"},HUF:{name:"Forint",minor_unit:"2",symbol:"Ft"},ISK:{name:"Iceland Krona",minor_unit:"0",symbol:"kr"},IDR:{name:"Rupiah",minor_unit:"2",symbol:"Rp"},IRR:{name:"Iranian Rial",minor_unit:"2",symbol:"﷼"},IQD:{name:"Iraqi Dinar",minor_unit:"3",symbol:"ع.د"},ILS:{name:"New Israeli Sheqel",minor_unit:"2",symbol:"₪"},JMD:{name:"Jamaican Dollar",minor_unit:"2",symbol:"J$"},JPY:{name:"Yen",minor_unit:"0",symbol:"¥"},JOD:{name:"Jordanian Dinar",minor_unit:"3",symbol:"JD"},KZT:{name:"Tenge",minor_unit:"2",symbol:"₸"},KES:{name:"Kenyan Shilling",minor_unit:"2",symbol:"KSh"},KPW:{name:"North Korean Won",minor_unit:"2",symbol:"₩"},KRW:{name:"Won",minor_unit:"0",symbol:"₩"},KWD:{name:"Kuwaiti Dinar",minor_unit:"3",symbol:"د.ك"},KGS:{name:"Som",minor_unit:"2",symbol:"сом"},LAK:{name:"Kip",minor_unit:"2",symbol:"₭"},LBP:{name:"Lebanese Pound",minor_unit:"2",symbol:"L£"},LSL:{name:"Loti",minor_unit:"2",symbol:"M"},ZAR:{name:"South African Rand",minor_unit:"2",symbol:"R"},LRD:{name:"Liberian Dollar",minor_unit:"2",symbol:"L$"},LYD:{name:"Libyan Dinar",minor_unit:"3",symbol:"LD"},CHF:{name:"Swiss Franc",minor_unit:"2",symbol:"CHF"},MOP:{name:"Pataca",minor_unit:"2",symbol:"MOP$"},MKD:{name:"Denar",minor_unit:"2",symbol:"ден"},MGA:{name:"Malagasy Ariary",minor_unit:"2",symbol:"Ar"},MWK:{name:"Malawi Kwacha",minor_unit:"2",symbol:"MK"},MYR:{name:"Malaysian Ringgit",minor_unit:"2",symbol:"RM"},MVR:{name:"Rufiyaa",minor_unit:"2",symbol:"Rf"},MRU:{name:"Ouguiya",minor_unit:"2",symbol:"UM"},MUR:{name:"Mauritian Rupee",minor_unit:"2",symbol:"₨"},MXN:{name:"Mexican Peso",minor_unit:"2",symbol:"Mex$"},MXV:{name:"Mexican Unidad de Inversion (UDI)",minor_unit:"2",symbol:"UDI"},MDL:{name:"Moldovan Leu",minor_unit:"2",symbol:"L"},MNT:{name:"Tugrik",minor_unit:"2",symbol:"₮"},MAD:{name:"Moroccan Dirham",minor_unit:"2",symbol:"DH"},MZN:{name:"Mozambique Metical",minor_unit:"2",symbol:"MT"},MMK:{name:"Kyat",minor_unit:"2",symbol:"Ks"},NAD:{name:"Namibia Dollar",minor_unit:"2",symbol:"N$"},NPR:{name:"Nepalese Rupee",minor_unit:"2",symbol:"₨"},NIO:{name:"Cordoba Oro",minor_unit:"2",symbol:"C$"},NGN:{name:"Naira",minor_unit:"2",symbol:"₦"},OMR:{name:"Rial Omani",minor_unit:"3",symbol:"ر.ع."},PKR:{name:"Pakistan Rupee",minor_unit:"2",symbol:"₨"},PAB:{name:"Balboa",minor_unit:"2",symbol:"B/."},PGK:{name:"Kina",minor_unit:"2",symbol:"K"},PYG:{name:"Guarani",minor_unit:"0",symbol:"₲"},PEN:{name:"Sol",minor_unit:"2",symbol:"S/"},PHP:{name:"Philippine Peso",minor_unit:"2",symbol:"₱"},PLN:{name:"Zloty",minor_unit:"2",symbol:"zł"},QAR:{name:"Qatari Rial",minor_unit:"2",symbol:"ر.ق"},RON:{name:"Romanian Leu",minor_unit:"2",symbol:"lei"},RUB:{name:"Russian Ruble",minor_unit:"2",symbol:"₽"},RWF:{name:"Rwandan Franc",minor_unit:"0",symbol:"FRw"},SHP:{name:"Saint Helena Pound",minor_unit:"2",symbol:"£"},WST:{name:"Tala",minor_unit:"2",symbol:"WS$"},STN:{name:"Dobra",minor_unit:"2",symbol:"Db"},SAR:{name:"Saudi Riyal",minor_unit:"2",symbol:"ر.س"},RSD:{name:"Serbian Dinar",minor_unit:"2",symbol:"дин."},SCR:{name:"Seychelles Rupee",minor_unit:"2",symbol:"₨"},SLL:{name:"Leone",minor_unit:"2",symbol:"Le"},SGD:{name:"Singapore Dollar",minor_unit:"2",symbol:"S$"},SBD:{name:"Solomon Islands Dollar",minor_unit:"2",symbol:"SI$"},SOS:{name:"Somali Shilling",minor_unit:"2",symbol:"S"},SSP:{name:"South Sudanese Pound",minor_unit:"2",symbol:"SS£"},LKR:{name:"Sri Lanka Rupee",minor_unit:"2",symbol:"₨"},SDG:{name:"Sudanese Pound",minor_unit:"2",symbol:"£"},SRD:{name:"Surinam Dollar",minor_unit:"2",symbol:"SRD"},SEK:{name:"Swedish Krona",minor_unit:"2",symbol:"kr"},CHE:{name:"WIR Euro",minor_unit:"2",symbol:"CHE"},CHW:{name:"WIR Franc",minor_unit:"2",symbol:"CHW"},SYP:{name:"Syrian Pound",minor_unit:"2",symbol:"£"},TWD:{name:"New Taiwan Dollar",minor_unit:"2",symbol:"NT$"},TJS:{name:"Somoni",minor_unit:"2",symbol:"ЅМ"},TZS:{name:"Tanzanian Shilling",minor_unit:"2",symbol:"Sh"},THB:{name:"Baht",minor_unit:"2",symbol:"฿"},TOP:{name:"Pa’anga",minor_unit:"2",symbol:"T$"},TTD:{name:"Trinidad and Tobago Dollar",minor_unit:"2",symbol:"TT$"},TND:{name:"Tunisian Dinar",minor_unit:"3",symbol:"DT"},TRY:{name:"Turkish Lira",minor_unit:"2",symbol:"₺"},TMT:{name:"Turkmenistan New Manat",minor_unit:"2",symbol:"T"},UGX:{name:"Uganda Shilling",minor_unit:"0",symbol:"USh"},UAH:{name:"Hryvnia",minor_unit:"2",symbol:"₴"},AED:{name:"UAE Dirham",minor_unit:"2",symbol:"د.إ"},UYI:{name:"Uruguay Peso en Unidades Indexadas (URUIURUI)",minor_unit:"2",symbol:"$U"},UYU:{name:"Peso Uruguayo",minor_unit:"0",symbol:"$U"},UYW:{name:"Unidad Previsional",minor_unit:"4",symbol:"UR"},UZS:{name:"Uzbekistan Sum",minor_unit:"2",symbol:"so‘m"},VUV:{name:"Vatu",minor_unit:"0",symbol:"VT"},VES:{name:"Bolívar Soberano",minor_unit:"2",symbol:"Bs.S."},VED:{name:"Bolívar Soberano",minor_unit:"2",symbol:"Bs.S."},VND:{name:"Dong",minor_unit:"0",symbol:"₫"},YER:{name:"Yemeni Rial",minor_unit:"2",symbol:"﷼"},ZMW:{name:"Zambian Kwacha",minor_unit:"2",symbol:"ZK"},ZWL:{name:"Zimbabwe Dollar",minor_unit:"2",symbol:"Z$"}};const l=["nan","infinity","percent","integer","group","decimal","fraction","plusSign","minusSign","percentSign","currency","code","symbol","name","compact","exponentInteger","exponentMinusSign","exponentSeparator","unit"],m={SGD:{$:s.SGD.symbol},XCD:{$:s.XCD.symbol},ARS:{$:s.ARS.symbol},AUD:{$:s.AUD.symbol},BSD:{$:s.BSD.symbol},BBD:{$:s.BBD.symbol},BMD:{$:s.BMD.symbol},CVE:{$:s.CVE.symbol},CAD:{$:s.CAD.symbol},KYD:{$:s.KYD.symbol},CLP:{$:s.CLP.symbol},COP:{$:s.COP.symbol},NZD:{$:s.NZD.symbol},CUP:{$:s.CUP.symbol},SVC:{$:s.SVC.symbol},FJD:{$:s.FJD.symbol},GYD:{$:s.GYD.symbol},HKD:{$:s.HKD.symbol},JMD:{$:s.JMD.symbol},LRD:{$:s.LRD.symbol},MOP:{$:s.MOP.symbol},MXN:{$:s.MXN.symbol},NAD:{$:s.NAD.symbol},SBD:{$:s.SBD.symbol},SRD:{$:s.SRD.symbol},ZWL:{$:s.ZWL.symbol},LSL:{L:s.LSL.symbol},AWG:{"Afl.":s.AWG.symbol},BYN:{Br:s.BYN.symbol},XAF:{FCFA:s.XAF.symbol},CNY:{"¥":s.CNY.symbol},EGP:{"£":s.EGP.symbol},FKP:{"£":s.FKP.symbol},LBP:{"£":s.LBP.symbol},SSP:{"£":s.SSP.symbol},WST:{T:s.WST.symbol}},u=(e,n)=>{for(let x=0;x<e.length;x++){const r=e[x];if("currency"===r.type&&n in m){const t=m[n];if(r.value in t){e[x].value=t[r.value];break}}}return e};var c=n(((e,n={})=>{if(!Number(e)&&0!==Number(e))throw new Error(`Parameter 'amount' is not a valid number. The received value was: ${e} of type ${typeof e}. Please ensure you pass a valid number.`);try{let x=i(n).formatToParts(Number(e));const r=(null==n?void 0:n.intlOptions)?Object.assign({},n.intlOptions):{},t=(null==n?void 0:n.currency)||r.currency;return x=u(x,t),x.map((e=>e.value)).join("")}catch(e){throw e instanceof Error?new Error(`An error occurred while formatting the number: ${e.message}`):new Error(`An unknown error occurred. Error details: ${e}`)}}));var h=n((()=>s));var y=n((e=>{var n;if(e in s)return null===(n=s[e])||void 0===n?void 0:n.symbol;throw new Error(`The provided currency code is invalid. The received value was: ${String(e)}. Please ensure you pass a valid currency code. Check valid currency codes here: https://github.com/razorpay/i18nify/blob/master/i18nify-data/currency/data.json`)}));var b=n(((e,n={})=>{if(!Number(e)&&0!==Number(e))throw new Error(`Parameter 'amount' is not a valid number. The received value was: ${e} of type ${typeof e}. Please ensure you pass a valid number.`);try{let x=i(n).formatToParts(Number(e));const r={},t=(null==n?void 0:n.intlOptions)?Object.assign({},n.intlOptions):{},o=(null==n?void 0:n.currency)||t.currency;return x=u(x,o),x.forEach((e=>{"group"===e.type?r.integer=(r.integer||"")+e.value:-1!=l.findIndex((n=>n===e.type))&&(r[e.type]=(r[e.type]||"")+e.value)})),Object.assign(Object.assign({},r),{isPrefixSymbol:x.findIndex((e=>"currency"===e.type))<x.findIndex((e=>"integer"===e.type)),rawParts:x})}catch(e){throw e instanceof Error?new Error(`An error occurred while formatting the number: ${e.message}`):new Error(`An unknown error occurred. Error details: ${e}`)}}));var f=n(((e,n)=>{const x=s[n.currency];if(!n.currency||!x)throw new Error(`The provided currency code is either empty or not supported. The received value was ${""===n.currency?"an empty string":`: ${String(n.currency)}`}. Please ensure you pass a valid currency code. Check valid currency codes here: https://github.com/razorpay/i18nify/blob/master/i18nify-data/currency/data.json`);return e/(Math.pow(10,Number(x.minor_unit))||100)}));var M=n(((e,n)=>{const x=s[n.currency];if(!n.currency||!x)throw new Error(`The provided currency code is either empty or not supported. The received value was ${""===n.currency?"an empty string":`: ${String(n.currency)}`}. Please ensure you pass a valid currency code. Check valid currency codes here: https://github.com/razorpay/i18nify/blob/master/i18nify-data/currency/data.json`);return e*(Math.pow(10,Number(x.minor_unit))||100)})),S={AF:"[2-7]\\d{8}",AX:"2\\d{4,9}|35\\d{4,5}|(?:60\\d\\d|800)\\d{4,6}|7\\d{5,11}|(?:[14]\\d|3[0-46-9]|50)\\d{4,8}",AL:"(?:700\\d\\d|900)\\d{3}|8\\d{5,7}|(?:[2-5]|6\\d)\\d{7}",DZ:"(?:[1-4]|[5-79]\\d|80)\\d{7}",AS:"(?:[58]\\d\\d|684|900)\\d{7}",AD:"(?:1|6\\d)\\d{7}|[135-9]\\d{5}",AO:"[29]\\d{8}",AI:"(?:264|[58]\\d\\d|900)\\d{7}",AQ:"",AG:"(?:268|[58]\\d\\d|900)\\d{7}",AR:"(?:11|[89]\\d\\d)\\d{8}|[2368]\\d{9}",AM:"(?:[1-489]\\d|55|60|77)\\d{6}",AW:"(?:[25-79]\\d\\d|800)\\d{4}",AU:"1(?:[0-79]\\d{7}(?:\\d(?:\\d{2})?)?|8[0-24-9]\\d{7})|[2-478]\\d{8}|1\\d{4,7}",AT:"1\\d{3,12}|2\\d{6,12}|43(?:(?:0\\d|5[02-9])\\d{3,9}|2\\d{4,5}|[3467]\\d{4}|8\\d{4,6}|9\\d{4,7})|5\\d{4,12}|8\\d{7,12}|9\\d{8,12}|(?:[367]\\d|4[0-24-9])\\d{4,11}",AZ:"365\\d{6}|(?:[124579]\\d|60|88)\\d{7}",BS:"(?:242|[58]\\d\\d|900)\\d{7}",BH:"[136-9]\\d{7}",BD:"[1-469]\\d{9}|8[0-79]\\d{7,8}|[2-79]\\d{8}|[2-9]\\d{7}|[3-9]\\d{6}|[57-9]\\d{5}",BB:"(?:246|[58]\\d\\d|900)\\d{7}",BY:"(?:[12]\\d|33|44|902)\\d{7}|8(?:0[0-79]\\d{5,7}|[1-7]\\d{9})|8(?:1[0-489]|[5-79]\\d)\\d{7}|8[1-79]\\d{6,7}|8[0-79]\\d{5}|8\\d{5}",BE:"4\\d{8}|[1-9]\\d{7}",BZ:"(?:0800\\d|[2-8])\\d{6}",BJ:"[24-689]\\d{7}",BM:"(?:441|[58]\\d\\d|900)\\d{7}",BT:"[17]\\d{7}|[2-8]\\d{6}",BO:"(?:[2-467]\\d\\d|8001)\\d{5}",BQ:"(?:[34]1|7\\d)\\d{5}",BA:"6\\d{8}|(?:[35689]\\d|49|70)\\d{6}",BW:"(?:0800|(?:[37]|800)\\d)\\d{6}|(?:[2-6]\\d|90)\\d{5}",BV:"",BR:"(?:[1-46-9]\\d\\d|5(?:[0-46-9]\\d|5[0-46-9]))\\d{8}|[1-9]\\d{9}|[3589]\\d{8}|[34]\\d{7}",IO:"3\\d{6}",BN:"[2-578]\\d{6}",BG:"00800\\d{7}|[2-7]\\d{6,7}|[89]\\d{6,8}|2\\d{5}",BF:"[025-7]\\d{7}",BI:"(?:[267]\\d|31)\\d{6}",CV:"(?:[2-59]\\d\\d|800)\\d{4}",KH:"1\\d{9}|[1-9]\\d{7,8}",CM:"[26]\\d{8}|88\\d{6,7}",CA:"(?:[2-8]\\d|90)\\d{8}|3\\d{6}",KY:"(?:345|[58]\\d\\d|900)\\d{7}",CF:"(?:[27]\\d{3}|8776)\\d{4}",TD:"(?:22|[69]\\d|77)\\d{6}",CL:"12300\\d{6}|6\\d{9,10}|[2-9]\\d{8}",CN:"1[127]\\d{8,9}|2\\d{9}(?:\\d{2})?|[12]\\d{6,7}|86\\d{6}|(?:1[03-689]\\d|6)\\d{7,9}|(?:[3-579]\\d|8[0-57-9])\\d{6,9}",CX:"1(?:[0-79]\\d{8}(?:\\d{2})?|8[0-24-9]\\d{7})|[148]\\d{8}|1\\d{5,7}",CC:"1(?:[0-79]\\d{8}(?:\\d{2})?|8[0-24-9]\\d{7})|[148]\\d{8}|1\\d{5,7}",CO:"(?:60\\d\\d|9101)\\d{6}|(?:1\\d|3)\\d{9}",KM:"[3478]\\d{6}",CD:"[189]\\d{8}|[1-68]\\d{6}",CG:"222\\d{6}|(?:0\\d|80)\\d{7}",CK:"[2-578]\\d{4}",CR:"(?:8\\d|90)\\d{8}|(?:[24-8]\\d{3}|3005)\\d{4}",CI:"[02]\\d{9}",HR:"(?:[24-69]\\d|3[0-79])\\d{7}|80\\d{5,7}|[1-79]\\d{7}|6\\d{5,6}",CU:"(?:[2-7]|8\\d\\d)\\d{7}|[2-47]\\d{6}|[34]\\d{5}",CW:"(?:[34]1|60|(?:7|9\\d)\\d)\\d{5}",CY:"(?:[279]\\d|[58]0)\\d{6}",CZ:"(?:[2-578]\\d|60)\\d{7}|9\\d{8,11}",DK:"[2-9]\\d{7}",DJ:"(?:2\\d|77)\\d{6}",DM:"(?:[58]\\d\\d|767|900)\\d{7}",DO:"(?:[58]\\d\\d|900)\\d{7}",EC:"1\\d{9,10}|(?:[2-7]|9\\d)\\d{7}",EG:"[189]\\d{8,9}|[24-6]\\d{8}|[135]\\d{7}",SV:"[267]\\d{7}|(?:80\\d|900)\\d{4}(?:\\d{4})?",GQ:"222\\d{6}|(?:3\\d|55|[89]0)\\d{7}",ER:"[178]\\d{6}",EE:"8\\d{9}|[4578]\\d{7}|(?:[3-8]\\d|90)\\d{5}",SZ:"0800\\d{4}|(?:[237]\\d|900)\\d{6}",ET:"(?:11|[2-579]\\d)\\d{7}",FK:"[2-7]\\d{4}",FO:"[2-9]\\d{5}",FJ:"45\\d{5}|(?:0800\\d|[235-9])\\d{6}",FI:"[1-35689]\\d{4}|7\\d{10,11}|(?:[124-7]\\d|3[0-46-9])\\d{8}|[1-9]\\d{5,8}",FR:"[1-9]\\d{8}",GF:"[56]94\\d{6}|(?:80|9\\d)\\d{7}",PF:"4\\d{5}(?:\\d{2})?|8\\d{7,8}",TF:"",GA:"(?:[067]\\d|11)\\d{6}|[2-7]\\d{6}",GM:"[2-9]\\d{6}",GE:"(?:[3-57]\\d\\d|800)\\d{6}",DE:"[2579]\\d{5,14}|49(?:[34]0|69|8\\d)\\d\\d?|49(?:37|49|60|7[089]|9\\d)\\d{1,3}|49(?:2[024-9]|3[2-689]|7[1-7])\\d{1,8}|(?:1|[368]\\d|4[0-8])\\d{3,13}|49(?:[015]\\d|2[13]|31|[46][1-8])\\d{1,9}",GH:"(?:[235]\\d{3}|800)\\d{5}",GI:"(?:[25]\\d|60)\\d{6}",GR:"5005000\\d{3}|8\\d{9,11}|(?:[269]\\d|70)\\d{8}",GL:"(?:19|[2-689]\\d|70)\\d{4}",GD:"(?:473|[58]\\d\\d|900)\\d{7}",GP:"590\\d{6}|(?:69|80|9\\d)\\d{7}",GU:"(?:[58]\\d\\d|671|900)\\d{7}",GT:"80\\d{6}|(?:1\\d{3}|[2-7])\\d{7}",GG:"(?:1481|[357-9]\\d{3})\\d{6}|8\\d{6}(?:\\d{2})?",GN:"722\\d{6}|(?:3|6\\d)\\d{7}",GW:"[49]\\d{8}|4\\d{6}",GY:"(?:[2-8]\\d{3}|9008)\\d{3}",HT:"(?:[2-489]\\d|55)\\d{6}",HM:"",VA:"0\\d{5,10}|3[0-8]\\d{7,10}|55\\d{8}|8\\d{5}(?:\\d{2,4})?|(?:1\\d|39)\\d{7,8}",HN:"8\\d{10}|[237-9]\\d{7}",HK:"8[0-46-9]\\d{6,7}|9\\d{4,7}|(?:[2-7]|9\\d{3})\\d{7}",HU:"[235-7]\\d{8}|[1-9]\\d{7}",IS:"(?:38\\d|[4-9])\\d{6}",IN:"(?:000800|[2-9]\\d\\d)\\d{7}|1\\d{7,12}",ID:"(?:(?:00[1-9]|8\\d)\\d{4}|[1-36])\\d{6}|00\\d{10}|[1-9]\\d{8,10}|[2-9]\\d{7}",IR:"[1-9]\\d{9}|(?:[1-8]\\d\\d|9)\\d{3,4}",IQ:"(?:1|7\\d\\d)\\d{7}|[2-6]\\d{7,8}",IE:"(?:1\\d|[2569])\\d{6,8}|4\\d{6,9}|7\\d{8}|8\\d{8,9}",IM:"1624\\d{6}|(?:[3578]\\d|90)\\d{8}",IL:"1\\d{6}(?:\\d{3,5})?|[57]\\d{8}|[1-489]\\d{7}",IT:"0\\d{5,10}|1\\d{8,10}|3(?:[0-8]\\d{7,10}|9\\d{7,8})|(?:43|55|70)\\d{8}|8\\d{5}(?:\\d{2,4})?",JM:"(?:[58]\\d\\d|658|900)\\d{7}",JP:"00[1-9]\\d{6,14}|[257-9]\\d{9}|(?:00|[1-9]\\d\\d)\\d{6}",JE:"1534\\d{6}|(?:[3578]\\d|90)\\d{8}",JO:"(?:(?:[2689]|7\\d)\\d|32|53)\\d{6}",KZ:"(?:33622|8\\d{8})\\d{5}|[78]\\d{9}",KE:"(?:[17]\\d\\d|900)\\d{6}|(?:2|80)0\\d{6,7}|[4-6]\\d{6,8}",KI:"(?:[37]\\d|6[0-79])\\d{6}|(?:[2-48]\\d|50)\\d{3}",KP:"85\\d{6}|(?:19\\d|[2-7])\\d{7}",KR:"00[1-9]\\d{8,11}|(?:[12]|5\\d{3})\\d{7}|[13-6]\\d{9}|(?:[1-6]\\d|80)\\d{7}|[3-6]\\d{4,5}|(?:00|7)0\\d{8}",KW:"18\\d{5}|(?:[2569]\\d|41)\\d{6}",KG:"8\\d{9}|[235-9]\\d{8}",LA:"[23]\\d{9}|3\\d{8}|(?:[235-8]\\d|41)\\d{6}",LV:"(?:[268]\\d|90)\\d{6}",LB:"[27-9]\\d{7}|[13-9]\\d{6}",LS:"(?:[256]\\d\\d|800)\\d{5}",LR:"(?:[245]\\d|33|77|88)\\d{7}|(?:2\\d|[4-6])\\d{6}",LY:"[2-9]\\d{8}",LI:"[68]\\d{8}|(?:[2378]\\d|90)\\d{5}",LT:"(?:[3469]\\d|52|[78]0)\\d{6}",LU:"35[013-9]\\d{4,8}|6\\d{8}|35\\d{2,4}|(?:[2457-9]\\d|3[0-46-9])\\d{2,9}",MO:"0800\\d{3}|(?:28|[68]\\d)\\d{6}",MG:"[23]\\d{8}",MW:"(?:[1289]\\d|31|77)\\d{7}|1\\d{6}",MY:"1\\d{8,9}|(?:3\\d|[4-9])\\d{7}",MV:"(?:800|9[0-57-9]\\d)\\d{7}|[34679]\\d{6}",ML:"[24-9]\\d{7}",MT:"3550\\d{4}|(?:[2579]\\d\\d|800)\\d{5}",MH:"329\\d{4}|(?:[256]\\d|45)\\d{5}",MQ:"596\\d{6}|(?:69|80|9\\d)\\d{7}",MR:"(?:[2-4]\\d\\d|800)\\d{5}",MU:"(?:[57]|8\\d\\d)\\d{7}|[2-468]\\d{6}",YT:"(?:80|9\\d)\\d{7}|(?:26|63)9\\d{6}",MX:"[2-9]\\d{9}",FM:"(?:[39]\\d\\d|820)\\d{4}",MD:"(?:[235-7]\\d|[89]0)\\d{6}",MC:"(?:[3489]|6\\d)\\d{7}",MN:"[12]\\d{7,9}|[5-9]\\d{7}",ME:"(?:20|[3-79]\\d)\\d{6}|80\\d{6,7}",MS:"(?:[58]\\d\\d|664|900)\\d{7}",MA:"[5-8]\\d{8}",MZ:"(?:2|8\\d)\\d{7}",MM:"1\\d{5,7}|95\\d{6}|(?:[4-7]|9[0-46-9])\\d{6,8}|(?:2|8\\d)\\d{5,8}",NA:"[68]\\d{7,8}",NR:"(?:444|(?:55|8\\d)\\d|666)\\d{4}",NP:"(?:1\\d|9)\\d{9}|[1-9]\\d{7}",NL:"(?:[124-7]\\d\\d|3(?:[02-9]\\d|1[0-8]))\\d{6}|8\\d{6,9}|9\\d{6,10}|1\\d{4,5}",NC:"(?:050|[2-57-9]\\d\\d)\\d{3}",NZ:"[1289]\\d{9}|50\\d{5}(?:\\d{2,3})?|[27-9]\\d{7,8}|(?:[34]\\d|6[0-35-9])\\d{6}|8\\d{4,6}",NI:"(?:1800|[25-8]\\d{3})\\d{4}",NE:"[027-9]\\d{7}",NG:"2[0-24-9]\\d{8}|[78]\\d{10,13}|[7-9]\\d{9}|[1-9]\\d{7}|[124-7]\\d{6}",NU:"(?:[4-7]|888\\d)\\d{3}",NF:"[13]\\d{5}",MK:"[2-578]\\d{7}",MP:"[58]\\d{9}|(?:67|90)0\\d{7}",NO:"(?:0|[2-9]\\d{3})\\d{4}",OM:"(?:1505|[279]\\d{3}|500)\\d{4}|800\\d{5,6}",PK:"122\\d{6}|[24-8]\\d{10,11}|9(?:[013-9]\\d{8,10}|2(?:[01]\\d\\d|2(?:[06-8]\\d|1[01]))\\d{7})|(?:[2-8]\\d{3}|92(?:[0-7]\\d|8[1-9]))\\d{6}|[24-9]\\d{8}|[89]\\d{7}",PW:"(?:[24-8]\\d\\d|345|900)\\d{4}",PS:"[2489]2\\d{6}|(?:1\\d|5)\\d{8}",PA:"(?:00800|8\\d{3})\\d{6}|[68]\\d{7}|[1-57-9]\\d{6}",PG:"(?:180|[78]\\d{3})\\d{4}|(?:[2-589]\\d|64)\\d{5}",PY:"59\\d{4,6}|9\\d{5,10}|(?:[2-46-8]\\d|5[0-8])\\d{4,7}",PE:"(?:[14-8]|9\\d)\\d{7}",PH:"(?:[2-7]|9\\d)\\d{8}|2\\d{5}|(?:1800|8)\\d{7,9}",PN:"",PL:"(?:6|8\\d\\d)\\d{7}|[1-9]\\d{6}(?:\\d{2})?|[26]\\d{5}",PT:"1693\\d{5}|(?:[26-9]\\d|30)\\d{7}",PR:"(?:[589]\\d\\d|787)\\d{7}",QA:"800\\d{4}|(?:2|800)\\d{6}|(?:0080|[3-7])\\d{7}",RE:"(?:26|[689]\\d)\\d{7}",RO:"(?:[236-8]\\d|90)\\d{7}|[23]\\d{5}",RU:"8\\d{13}|[347-9]\\d{9}",RW:"(?:06|[27]\\d\\d|[89]00)\\d{6}",BL:"590\\d{6}|(?:69|80|9\\d)\\d{7}",SH:"(?:[256]\\d|8)\\d{3}",KN:"(?:[58]\\d\\d|900)\\d{7}",LC:"(?:[58]\\d\\d|758|900)\\d{7}",MF:"590\\d{6}|(?:69|80|9\\d)\\d{7}",PM:"[45]\\d{5}|(?:708|80\\d)\\d{6}",VC:"(?:[58]\\d\\d|784|900)\\d{7}",WS:"(?:[2-6]|8\\d{5})\\d{4}|[78]\\d{6}|[68]\\d{5}",SM:"(?:0549|[5-7]\\d)\\d{6}",ST:"(?:22|9\\d)\\d{5}",SA:"92\\d{7}|(?:[15]|8\\d)\\d{8}",SN:"(?:[378]\\d|93)\\d{7}",RS:"38[02-9]\\d{6,9}|6\\d{7,9}|90\\d{4,8}|38\\d{5,6}|(?:7\\d\\d|800)\\d{3,9}|(?:[12]\\d|3[0-79])\\d{5,10}",SC:"800\\d{4}|(?:[249]\\d|64)\\d{5}",SL:"(?:[237-9]\\d|66)\\d{6}",SG:"(?:(?:1\\d|8)\\d\\d|7000)\\d{7}|[3689]\\d{7}",SX:"7215\\d{6}|(?:[58]\\d\\d|900)\\d{7}",SK:"[2-689]\\d{8}|[2-59]\\d{6}|[2-5]\\d{5}",SI:"[1-7]\\d{7}|8\\d{4,7}|90\\d{4,6}",SB:"[6-9]\\d{6}|[1-6]\\d{4}",SO:"[346-9]\\d{8}|[12679]\\d{7}|[1-5]\\d{6}|[1348]\\d{5}",ZA:"[1-79]\\d{8}|8\\d{4,9}",GS:"",SS:"[19]\\d{8}",ES:"[5-9]\\d{8}",LK:"[1-9]\\d{8}",SD:"[19]\\d{8}",SR:"(?:[2-5]|68|[78]\\d)\\d{5}",SJ:"0\\d{4}|(?:[489]\\d|79)\\d{6}",SE:"(?:[26]\\d\\d|9)\\d{9}|[1-9]\\d{8}|[1-689]\\d{7}|[1-4689]\\d{6}|2\\d{5}",CH:"8\\d{11}|[2-9]\\d{8}",SY:"[1-39]\\d{8}|[1-5]\\d{7}",TW:"[2-689]\\d{8}|7\\d{9,10}|[2-8]\\d{7}|2\\d{6}",TJ:"[0-57-9]\\d{8}",TZ:"(?:[25-8]\\d|41|90)\\d{7}",TH:"(?:001800|[2-57]|[689]\\d)\\d{7}|1\\d{7,9}",TL:"7\\d{7}|(?:[2-47]\\d|[89]0)\\d{5}",TG:"[279]\\d{7}",TK:"[2-47]\\d{3,6}",TO:"(?:0800|(?:[5-8]\\d\\d|999)\\d)\\d{3}|[2-8]\\d{4}",TT:"(?:[58]\\d\\d|900)\\d{7}",TN:"[2-57-9]\\d{7}",TR:"4\\d{6}|8\\d{11,12}|(?:[2-58]\\d\\d|900)\\d{7}",TM:"(?:[1-6]\\d|71)\\d{6}",TC:"(?:[58]\\d\\d|649|900)\\d{7}",TV:"(?:2|7\\d\\d|90)\\d{4}",UG:"800\\d{6}|(?:[29]0|[347]\\d)\\d{7}",UA:"[89]\\d{9}|[3-9]\\d{8}",AE:"(?:[4-7]\\d|9[0-689])\\d{7}|800\\d{2,9}|[2-4679]\\d{7}",GB:"[1-357-9]\\d{9}|[18]\\d{8}|8\\d{6}",UM:"",US:"[2-9]\\d{9}|3\\d{6}",UY:"0004\\d{2,9}|[1249]\\d{7}|(?:[49]\\d|80)\\d{5}",UZ:"(?:20|33|[5-79]\\d|88)\\d{7}",VU:"[57-9]\\d{6}|(?:[238]\\d|48)\\d{3}",VE:"[68]00\\d{7}|(?:[24]\\d|[59]0)\\d{8}",VN:"[12]\\d{9}|[135-9]\\d{8}|[16]\\d{7}|[16-8]\\d{6}",VG:"(?:284|[58]\\d\\d|900)\\d{7}",VI:"[58]\\d{9}|(?:34|90)0\\d{7}",WF:"(?:40|72)\\d{4}|8\\d{5}(?:\\d{3})?",EH:"[5-8]\\d{8}",YE:"(?:1|7\\d)\\d{7}|[1-7]\\d{6}",ZM:"800\\d{6}|(?:21|63|[79]\\d)\\d{7}",ZW:"2(?:[0-57-9]\\d{6,8}|6[0-24-9]\\d{6,7})|[38]\\d{9}|[35-8]\\d{8}|[3-6]\\d{7}|[1-689]\\d{6}|[1-3569]\\d{5}|[1356]\\d{4}",XK:"2\\d{7,8}|3\\d{7,11}|(?:4\\d\\d|[89]00)\\d{5}",FW:"^\\+590\\s\\d{2}\\s\\d{2}\\s\\d{2}\\s\\d{2}$","YT-UNF":"^(?:\\+262)?\\d{9}$","BQ-BO":"","BQ-SA":"","BQ-SE":"","GB-ENG":"","GB-NIR":"","GB-SCT":"","GB-UKM":"","GB-WLS":""},D={1:["US","AG","AI","AS","BB","BM","BS","CA","DM","DO","GD","GU","JM","KN","KY","LC","MP","MS","PR","TC","TT","VC","VG","VI"],7:["RU","KZ"],20:["EG"],27:["ZA"],30:["GR"],31:["NL"],32:["BE"],33:["FR"],34:["ES"],36:["HU"],39:["IT","VA"],40:["RO"],41:["CH"],43:["AT"],44:["GB","GB-ENG","GB-NIR","GB-SCT","GB-UKM","GB-WLS"],45:["DK"],46:["SE"],47:["NO"],48:["PL"],49:["DE"],51:["PE"],52:["MX"],53:["CU"],54:["AR"],55:["BR"],56:["CL"],57:["CO"],58:["VE"],60:["MY"],61:["AU"],62:["ID"],63:["PH"],64:["NZ"],65:["SG"],66:["TH"],81:["JP"],82:["KR"],84:["VN"],86:["CN"],90:["TR"],91:["IN"],92:["PK"],93:["AF"],94:["LK"],95:["MM"],98:["IR"],211:["SS"],212:["MA"],213:["DZ"],216:["TN"],218:["LY"],220:["GM"],221:["SN"],222:["MR"],223:["ML"],224:["GN"],225:["CI"],226:["BF"],227:["NE"],228:["TG"],229:["BJ"],230:["MU"],231:["LR"],232:["SL"],233:["GH"],234:["NG"],235:["TD"],236:["CF"],237:["CM"],238:["CV"],239:["ST"],240:["GQ"],241:["GA"],242:["CG"],243:["CD"],244:["AO"],245:["GW"],248:["SC"],249:["SD"],250:["RW"],251:["ET"],252:["SO"],253:["DJ"],254:["KE"],255:["TZ"],256:["UG"],257:["BI"],258:["MZ"],260:["ZM"],261:["MG"],262:["RE","YT","YT-UNF"],263:["ZW"],264:["NA"],265:["MW"],266:["LS"],267:["BW"],268:["SZ"],269:["KM"],290:["SH"],291:["ER"],297:["AW"],298:["FO"],299:["GL"],350:["GI"],351:["PT"],352:["LU"],353:["IE"],354:["IS"],355:["AL"],356:["MT"],357:["CY"],358:["FI"],359:["BG"],370:["LT"],371:["LV"],372:["EE"],373:["MD"],374:["AM"],375:["BY"],376:["AD"],377:["MC"],378:["SM"],380:["UA"],381:["RS"],382:["ME"],383:["XK"],385:["HR"],386:["SI"],387:["BA"],389:["MK"],420:["CZ"],421:["SK"],423:["LI"],500:["FK"],501:["BZ"],502:["GT"],503:["SV"],504:["HN"],505:["NI"],506:["CR"],507:["PA"],509:["HT"],590:["MF","FW"],591:["BO"],592:["GY"],593:["EC"],594:["GF"],595:["PY"],597:["SR"],598:["UY"],599:["CW","BQ","BQ-BO","BQ-SA","BQ-SE"],670:["TL"],673:["BN"],674:["NR"],675:["PG"],676:["TO"],677:["SB"],678:["VU"],679:["FJ"],680:["PW"],682:["CK"],683:["NU"],685:["WS"],686:["KI"],687:["NC"],688:["TV"],689:["PF"],691:["FM"],692:["MH"],850:["KP"],852:["HK"],853:["MO"],855:["KH"],856:["LA"],880:["BD"],886:["TW"],960:["MV"],961:["LB"],962:["JO"],963:["SY"],964:["IQ"],965:["KW"],966:["SA"],967:["YE"],968:["OM"],970:["PS"],971:["AE"],972:["IL"],973:["BH"],974:["QA"],975:["BT"],976:["MN"],977:["NP"],992:["TJ"],993:["TM"],994:["AZ"],995:["GE"],996:["KG"],998:["UZ"]};const g=e=>{const n=S;if("+"===e.toString().charAt(0)){const x=e.toString().replace(/\D/g,""),r=[],t=D;for(const e in t)x.startsWith(e)&&r.push(...t[e].map((n=>({countryCode:n,dialCode:`+${e}`}))));return r.find((x=>{const r=String(e).replace(x.dialCode,""),t=n[x.countryCode];if(t&&p(r,t))return x}))||{countryCode:"",dialCode:""}}return{countryCode:"",dialCode:""}},C=e=>{const n=e.replace(/[^0-9+]|(?!A)\+/g,"");return"+"===e[0]?`+${n}`:n},p=(e,n)=>(e=e||"",new RegExp("^(?:"+n+")$").test(e));var v=n(((e,n)=>{const x=C(e.toString());if(!x)return!1;const r=S,t=g(x);if(n=n&&n in r?n:t.countryCode,!e)return!1;if(n in r){const e=(e=>{const n=C(String(e)),{dialCode:x}=g(n);return String(n).replace(x,"")})(x);return p(e,r[n])}return!1})),I={AF:"xx xxx xxxx",AX:"xxx xxx",AL:"xxx xx xxxx",DZ:"xxxx-xxxx-xxx",AS:"xxx-xxxx",AD:"xxx xxx",AO:"xx xxx xxxx",AI:"xxx-xxxx",AQ:"",AG:"xxx-xxxx",AR:"xxxx-xxxx",AM:"xx xx xx xx",AW:"xxx-xxxx",AU:"xxx xxx xxx",AT:"xxx xxxxxxxx",AZ:"xx xxx xx xx",BS:"xxx-xxxx",BH:"xxxx xxxx",BD:"xxxx-xxxxxx",BB:"xxx-xxxx",BY:"xx xxx-xx-xx",BE:"xxx xx xx xx",BZ:"xxx-xxxx",BJ:"xx xx xx xx",BM:"xxx-xxxx",BT:"x xxx xxx",BO:"xxxx-xxxx",BQ:"xxx xxxx",BA:"xx xxx-xxxx",BW:"xx xxxx xxxx",BV:"",BR:"xx xxxx-xxxx",IO:"xxx xxxx",BN:"xxxx-xxxx",BG:"xx xxx xxxx",BF:"xx xx xx xx",BI:"xx xx xx xx",CV:"xxx xxxx",KH:"xxx-xxx-xxx",CM:"xx xx xx xx",CA:"xxx-xxx-xxxx",KY:"xxx-xxxx",CF:"xx xx xx xx",TD:"xx xx xx xx",CL:"x xxxx xxxx",CN:"xxxx-xxxxxxx",CX:"xxx xxxx xxxx",CC:"xxx xxxx xxxx",CO:"xxxx-xxxxxxx",KM:"xx xx xx xx",CD:"xx xxx xxxx",CG:"xx xx xx xx",CK:"xx xxx",CR:"xxxx-xxxx",CI:"xx xx xx xx",HR:"xxx xxx xxxx",CU:"xxxx-xxxx",CW:"xxx xxxx",CY:"xx xxxxxx",CZ:"xxx xxx xxx",DK:"xx xx xx xx",DJ:"xx xx xx xx",DM:"xxx-xxxx",DO:"xxx-xxxxxxx",EC:"xx xxx xxxx",EG:"xx xxx xxxx",SV:"xxxx-xxxx",GQ:"xx xxx xxxx",ER:"x xxx xxxx",EE:"xxx xxxx",SZ:"xxx xx xxxx",ET:"xx xxx xxxx",FK:"xxxxx",FO:"xxx xxx",FJ:"xxxx xxxx",FI:"xx xxx xxxx",FR:"xx xx xx xx xx",GF:"xxx xx xx xx",PF:"xx xx xx xx",TF:"",GA:"xx xx xx xx",GM:"xxxx-xxxx",GE:"xxx xxx xxx",DE:"xxx xxxxxxxx",GH:"xxx xxx xxxx",GI:"xxxx xxxx",GR:"xx xxx xxxx",GL:"xx xx xx",GD:"xxx-xxxx",GP:"xxx xx xx xx",GU:"xxx-xxxx",GT:"xxxx-xxxx",GG:"xxxx xxxx",GN:"xx xx xx xx",GW:"xx xx xx xx",GY:"xxx-xxxx",HT:"xxx-xxxx",HM:"",VA:"xxx xxxx xxxx",HN:"xxxx-xxxx",HK:"xxxx xxxx",HU:"xxx xxx xxxx",IS:"xxx xxxx",IN:"xxxx xxxxxx",ID:"xxxx-xxxx-xxxx",IR:"xx xxxx xxxx",IQ:"xx xxx xxxx",IE:"xx xxx xxxx",IM:"xxxx xxxx",IL:"xxxx-xxx-xxx",IT:"xxx xxxx xxxx",JM:"xxx-xxxx",JP:"xx xxxx xxxx",JE:"xxxx xxxx",JO:"xx xxxx xxxx",KZ:"xxx-xxx-xx-xx",KE:"xxx xxxxxx",KI:"xx xxx",KP:"xx xxx xxxx",KR:"xx xxxx xxxx",KW:"xxx xx xxxx",KG:"xxx-xx-xx-xx",LA:"xxx xx xxxx",LV:"xxxx xxxx",LB:"xx xxx xxx",LS:"xxx xx xxxx",LR:"xxx-xxx-xxxx",LY:"xx xxxxx xxxx",LI:"xxx xx xx",LT:"xxx xxxxx",LU:"xxx xx xxx",MO:"xxxx xxxx",MG:"xx xx xx xx xx",MW:"xx xxxx xxxx",MY:"xx xxxxx xx",MV:"xxxxxx",ML:"xx xx xx xx",MT:"xx xx xx xx",MH:"xxx xxxx",MQ:"xxx xx xx xx",MR:"xx xx xx xx",MU:"xx xxxx xxxx",YT:"xxx xx xx xx",MX:"xxx-xxx-xxxx",FM:"xxx xxxx",MD:"xx xxxxxx",MC:"xx xx xx xx",MN:"xxx-xx-xxxx",ME:"xx xxxxxx",MS:"xxx-xxxx",MA:"xxxx-xxxxxx",MZ:"xx xxxxxxx",MM:"xx xxxxxx",NA:"xx xxxx xxxx",NR:"xxx xxxx",NP:"xxxx-xxxxxxx",NL:"xxx-xxxxxxx",NC:"xx xx xx",NZ:"xxx-xxxxxxx",NI:"xxxx-xxxx",NE:"xx xx xx xx",NG:"xxx xxx xxxx",NU:"xxxx",NF:"x xxxx",MK:"xx xx xx xx",MP:"xxx-xxxx",NO:"xxxx xxxx",OM:"xxxx-xxxx",PK:"xxx-xxxxxxx",PW:"xxx xxxx",PS:"xxxx-xxxxxxx",PA:"xxx-xxxx",PG:"xxx-xxxxxx",PY:"xxx-xxxxxx",PE:"xxx-xxx-xxx",PH:"xxx-xxxx",PN:"",PL:"xxx xxx xxx",PT:"xxx xxx xxx",PR:"xxx-xxx-xxxx",QA:"xxxx xxxx",RE:"xxx xx xx xx",RO:"xxx xxx xxxx",RU:"xxx xxx-xx-xx",RW:"xxx xxxxxx",BL:"xxx xx xx xx",SH:"xxxx",KN:"xxx-xxxx",LC:"xxx-xxxx",MF:"xxx xx xx xx",PM:"xxx xxxx",VC:"xxx-xxxx",WS:"xx xxxxx",SM:"xxxxx xxxxx",ST:"xx xxx xx",SA:"xxx-xxxxxxx",SN:"xx xxx xx xx",RS:"xxx xxxxx",SC:"xx xxxxx",SL:"xxx-xxxxxx",SG:"xxxx xxxx",SX:"xxx-xxxx",SK:"xxx xxx xxx",SI:"xx xxxxxx",SB:"xxxxx",SO:"xxx xxxxxxx",ZA:"xxx-xxx-xxxx",GS:"",SS:"xxx xxxx xxx",ES:"xxx xxx xxx",LK:"xx xxx xxxx",SD:"xx xxx xxxx",SR:"xxx-xxxx",SJ:"xxx xx xxx",SE:"xxx-xxx xx xx",CH:"xxx xxx xxx",SY:"xx xxxx xxxx",TW:"xxxx-xxxxxx",TJ:"xxx xx xx xx",TZ:"xxx xxx xxxx",TH:"xxx-xxxxxxx",TL:"xxx-xxxxxxx",TG:"xx xx xx xx",TK:"xxxx",TO:"xxxxx",TT:"xxx-xxxx",TN:"xx xxxxxx",TR:"xxx xxx xx xx",TM:"x xxx xxx",TC:"xxx-xxxx",TV:"xxxxx",UG:"xxx xxxxxxx",UA:"xx xxx xx xx",AE:"xx xxx xxxx",GB:"xxxx xxx xxx",UM:"",US:"xxx-xxx-xxxx",UY:"xxx-xxxxx",UZ:"xxx-xxx-xx-xx",VU:"xx xxxxx",VE:"xxxx-xxx-xxxx",VN:"xxxx-xxxxxxx",VG:"xxx-xxxx",VI:"xxx-xxxx",WF:"xx xxxx",EH:"xx xx xx xx",YE:"xxxx-xxxx",ZM:"xxx-xxxxxxx",ZW:"xx xxx xxxx",XK:"xxx xxx xxx",FW:"xxx xx xx xx","YT-UNF":"xxx xx xx xx","BQ-BO":"","BQ-SA":"","BQ-SE":"","GB-ENG":"","GB-NIR":"","GB-SCT":"","GB-UKM":"","GB-WLS":""};var T=n(((e,n)=>{if(!e)throw new Error(`Parameter 'phoneNumber' is invalid! The received value was: ${e}. Please ensure you provide a valid phone number.`);e=e.toString(),e=C(e);const x=I[n=n&&n in I?n:g(e).countryCode];if(!x)return e;let r=0;for(let e=0;e<x.length;e++)"x"===x[e]&&r++;const t=e.length-r,o=e.slice(t),a=[];let d=0;for(let e=0;e<x.length;e++){const n=x[e];"x"===n?d<o.length&&(a.push(o[d]),d++):a.push(n)}const i=a.join("");return(e.slice(0,t)+" "+i).trim()}));var w=n(((e,n)=>{if(!e)throw new Error(`Parameter 'phoneNumber' is invalid! The received value was: ${e}. Please ensure you provide a valid phone number.`);e=e.toString(),e=C(e);const x=g(e),r=I,t=n&&n in r?n:x.countryCode,o=x.dialCode,a=T(e,t),d=r[t];if(!d)return{countryCode:t,dialCode:o,formattedPhoneNumber:e,formatTemplate:"",phoneNumber:e};let i=0;for(let e=0;e<d.length;e++)"x"===d[e]&&i++;const s=e.length-i,l=r[t];return{phoneNumber:e.slice(s),countryCode:t,dialCode:o,formattedPhoneNumber:d?a:e,formatTemplate:l||""}}));var B=n((()=>{const e={};for(const[n,x]of Object.entries(D))x.forEach((x=>{e[x]=`+${Number(n)}`}));return e}));var E,P=n((e=>{const n=B();if(e in n)return n[e];throw new Error(`The provided country code is invalid. The received value was: ${e}. Please ensure you pass a valid country code. Check valid country codes here: https://github.com/razorpay/i18nify/blob/master/i18nify-data/country/metadata/data.json`)}));!function(e){e.Full="full",e.Prefix="prefix",e.Suffix="suffix",e.Alternate="alternate"}(E||(E={}));var A=n((({countryCode:e,withDialCode:n=!0,phoneNumber:x,maskingOptions:r={}})=>{const{maskingStyle:t=E.Full,maskedDigitsCount:o=0,maskingChar:a="x"}=r;if(!e&&!x)throw new Error("Either 'countryCode' or 'phoneNumber' is mandatory. Please provide a valid 'countryCode' or 'phoneNumber'. Check valid country codes here: https://github.com/razorpay/i18nify/blob/master/i18nify-data/country/metadata/data.json");let d,i;if(x){let n=x;n=n.toString(),n=C(n);const r=g(n),a=e||r.countryCode;try{i=P(a)}catch(e){i=r.dialCode}const s="+"===n[0]?n.slice(i.toString().length):n,l=I[a]||x.replace(/\d/g,"x");switch(t){case E.Alternate:d=(e=>String(e).trim().split("").reduce(((e,n)=>(/\d/.test(n)&&(e.numericCount%2!=0?e.result.push("x"):e.result.push(n),e.numericCount++),e)),{result:[],numericCount:0}).result.join(""))(s);break;case E.Prefix:d=((e,n,x)=>{const r=e.split("");let t=n.length-1,o=0;for(let e=r.length-1;e>=0&&o<x;e--)"x"===r[e]&&t>=0&&(r[e]=n[t--],o++);return r.join("")})(l,String(s),s.length-o);break;case E.Suffix:d=((e,n,x)=>{const r=e.split("");let t=0,o=0;for(let e=0;e<r.length&&o<x;e++)"x"===r[e]&&t<n.length&&(r[e]=n[t++],o++);return r.join("")})(l,String(s),s.length-o);break;default:d=l}}else{if(d=I[e],!d)throw new Error(`Parameter 'countryCode' is invalid. The received value was: ${e}. Check valid country codes here: https://github.com/razorpay/i18nify/blob/master/i18nify-data/country/metadata/data.json`);i=P(e)}return n?`${i} ${d.replace(/x/g,a)}`.trim():d.trim().replace(/x/g,a)}));function G(e,n,x){!function(e,n){if(n.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}(e,n),n.set(e,x)}function N(e,n){return e-n*Math.floor(e/n)}const R=1721426;function _(e,n,x,r){let t=(n=Y(e,n))-1,o=-2;return x<=2?o=0:$(n)&&(o=-1),1721425+365*t+Math.floor(t/4)-Math.floor(t/100)+Math.floor(t/400)+Math.floor((367*x-362)/12+o+r)}function $(e){return e%4==0&&(e%100!=0||e%400==0)}function Y(e,n){return"BC"===e?1-n:n}const L={standard:[31,28,31,30,31,30,31,31,30,31,30,31],leapyear:[31,29,31,30,31,30,31,31,30,31,30,31]};class K{fromJulianDay(e){let n=e,x=n-R,r=Math.floor(x/146097),t=N(x,146097),o=Math.floor(t/36524),a=N(t,36524),d=Math.floor(a/1461),i=N(a,1461),s=Math.floor(i/365),l=400*r+100*o+4*d+s+(4!==o&&4!==s?1:0),[m,u]=function(e){let n="AD";return e<=0&&(n="BC",e=1-e),[n,e]}(l),c=n-_(m,u,1,1),h=2;n<_(m,u,3,1)?h=0:$(u)&&(h=1);let y=Math.floor((12*(c+h)+373)/367),b=n-_(m,u,y,1)+1;return new Be(m,u,y,b)}toJulianDay(e){return _(e.era,e.year,e.month,e.day)}getDaysInMonth(e){return L[$(e.year)?"leapyear":"standard"][e.month-1]}getMonthsInYear(e){return 12}getDaysInYear(e){return $(e.year)?366:365}getYearsInEra(e){return 9999}getEras(){return["BC","AD"]}isInverseEra(e){return"BC"===e.era}balanceDate(e){e.year<=0&&(e.era="BC"===e.era?"AD":"BC",e.year=1-e.year)}constructor(){this.identifier="gregory"}}function U(e,n){return e.calendar.toJulianDay(e)-n.calendar.toJulianDay(n)}function F(e,n){return O(e)-O(n)}function O(e){return 36e5*e.hour+6e4*e.minute+1e3*e.second+e.millisecond}let H=null;function Z(){return null==H&&(H=(new Intl.DateTimeFormat).resolvedOptions().timeZone),H}function W(e){return k(Y((e=xe(e,new K)).era,e.year),e.month,e.day,e.hour,e.minute,e.second,e.millisecond)}function k(e,n,x,r,t,o,a){let d=new Date;return d.setUTCHours(r,t,o,a),d.setUTCFullYear(e,n-1,x),d.getTime()}function V(e,n){if("UTC"===n)return 0;if(e>0&&n===Z())return-6e4*new Date(e).getTimezoneOffset();let{year:x,month:r,day:t,hour:o,minute:a,second:d}=J(e,n);return k(x,r,t,o,a,d,0)-1e3*Math.floor(e/1e3)}const j=new Map;function J(e,n){let x=j.get(n);x||(x=new Intl.DateTimeFormat("en-US",{timeZone:n,hour12:!1,era:"short",year:"numeric",month:"numeric",day:"numeric",hour:"numeric",minute:"numeric",second:"numeric"}),j.set(n,x));let r=x.formatToParts(new Date(e)),t={};for(let e of r)"literal"!==e.type&&(t[e.type]=e.value);return{year:"BC"===t.era||"B"===t.era?1-t.year:+t.year,month:+t.month,day:+t.day,hour:"24"===t.hour?0:+t.hour,minute:+t.minute,second:+t.second}}const Q=864e5;function X(e,n,x,r){return(x===r?[x]:[x,r]).filter((x=>function(e,n,x){let r=J(x,n);return e.year===r.year&&e.month===r.month&&e.day===r.day&&e.hour===r.hour&&e.minute===r.minute&&e.second===r.second}(e,n,x)))}function z(e,n,x="compatible"){let r=ne(e);if("UTC"===n)return W(r);if(n===Z()&&"compatible"===x){r=xe(r,new K);let e=new Date,n=Y(r.era,r.year);return e.setFullYear(n,r.month-1,r.day),e.setHours(r.hour,r.minute,r.second,r.millisecond),e.getTime()}let t=W(r),o=V(t-Q,n),a=V(t+Q,n),d=X(r,n,t-o,t-a);if(1===d.length)return d[0];if(d.length>1)switch(x){case"compatible":case"earlier":return d[0];case"later":return d[d.length-1];case"reject":throw new RangeError("Multiple possible absolute times found")}switch(x){case"earlier":return Math.min(t-o,t-a);case"compatible":case"later":return Math.max(t-o,t-a);case"reject":throw new RangeError("No such absolute time found")}}function q(e,n,x="compatible"){return new Date(z(e,n,x))}function ee(e,n){let x=V(e,n),r=new Date(e+x),t=r.getUTCFullYear(),o=r.getUTCMonth()+1,a=r.getUTCDate(),d=r.getUTCHours(),i=r.getUTCMinutes(),s=r.getUTCSeconds(),l=r.getUTCMilliseconds();return new Re(t,o,a,n,x,d,i,s,l)}function ne(e,n){let x=0,r=0,t=0,o=0;if("timeZone"in e)({hour:x,minute:r,second:t,millisecond:o}=e);else if("hour"in e&&!n)return e;return n&&({hour:x,minute:r,second:t,millisecond:o}=n),new Ge(e.calendar,e.era,e.year,e.month,e.day,x,r,t,o)}function xe(e,n){if(e.calendar.identifier===n.identifier)return e;let x=n.fromJulianDay(e.calendar.toJulianDay(e)),r=e.copy();return r.calendar=n,r.era=x.era,r.year=x.year,r.month=x.month,r.day=x.day,se(r),r}function re(e,n,x){if(e instanceof Re)return e.timeZone===n?e:function(e,n){let x=W(e)-e.offset;return xe(ee(x,n),e.calendar)}(e,n);return ee(z(e,n,x),n)}const te=36e5;function oe(e,n){let x=e.copy(),r="hour"in x?be(x,n):0;ae(x,n.years||0),x.calendar.balanceYearMonth&&x.calendar.balanceYearMonth(x,e),x.month+=n.months||0,de(x),ie(x),x.day+=7*(n.weeks||0),x.day+=n.days||0,x.day+=r,function(e){for(;e.day<1;)e.month--,de(e),e.day+=e.calendar.getDaysInMonth(e);for(;e.day>e.calendar.getDaysInMonth(e);)e.day-=e.calendar.getDaysInMonth(e),e.month++,de(e)}(x),x.calendar.balanceDate&&x.calendar.balanceDate(x),x.year<1&&(x.year=1,x.month=1,x.day=1);let t=x.calendar.getYearsInEra(x);if(x.year>t){var o,a;let e=null===(o=(a=x.calendar).isInverseEra)||void 0===o?void 0:o.call(a,x);x.year=t,x.month=e?1:x.calendar.getMonthsInYear(x),x.day=e?1:x.calendar.getDaysInMonth(x)}x.month<1&&(x.month=1,x.day=1);let d=x.calendar.getMonthsInYear(x);return x.month>d&&(x.month=d,x.day=x.calendar.getDaysInMonth(x)),x.day=Math.max(1,Math.min(x.calendar.getDaysInMonth(x),x.day)),x}function ae(e,n){var x,r;(null===(x=(r=e.calendar).isInverseEra)||void 0===x?void 0:x.call(r,e))&&(n=-n),e.year+=n}function de(e){for(;e.month<1;)ae(e,-1),e.month+=e.calendar.getMonthsInYear(e);let n=0;for(;e.month>(n=e.calendar.getMonthsInYear(e));)e.month-=n,ae(e,1)}function ie(e){e.month=Math.max(1,Math.min(e.calendar.getMonthsInYear(e),e.month)),e.day=Math.max(1,Math.min(e.calendar.getDaysInMonth(e),e.day))}function se(e){e.calendar.constrainDate&&e.calendar.constrainDate(e),e.year=Math.max(1,Math.min(e.calendar.getYearsInEra(e),e.year)),ie(e)}function le(e){let n={};for(let x in e)"number"==typeof e[x]&&(n[x]=-e[x]);return n}function me(e,n){return oe(e,le(n))}function ue(e,n){let x=e.copy();return null!=n.era&&(x.era=n.era),null!=n.year&&(x.year=n.year),null!=n.month&&(x.month=n.month),null!=n.day&&(x.day=n.day),se(x),x}function ce(e,n){let x=e.copy();return null!=n.hour&&(x.hour=n.hour),null!=n.minute&&(x.minute=n.minute),null!=n.second&&(x.second=n.second),null!=n.millisecond&&(x.millisecond=n.millisecond),he(x),x}function he(e){e.millisecond=Math.max(0,Math.min(e.millisecond,1e3)),e.second=Math.max(0,Math.min(e.second,59)),e.minute=Math.max(0,Math.min(e.minute,59)),e.hour=Math.max(0,Math.min(e.hour,23))}function ye(e,n){let x=e%n;return x<0&&(x+=n),x}function be(e,n){return e.hour+=n.hours||0,e.minute+=n.minutes||0,e.second+=n.seconds||0,e.millisecond+=n.milliseconds||0,function(e){e.second+=Math.floor(e.millisecond/1e3),e.millisecond=ye(e.millisecond,1e3),e.minute+=Math.floor(e.second/60),e.second=ye(e.second,60),e.hour+=Math.floor(e.minute/60),e.minute=ye(e.minute,60);let n=Math.floor(e.hour/24);return e.hour=ye(e.hour,24),n}(e)}function fe(e,n){let x=e.copy();return be(x,n),x}function Me(e,n,x,r){let t=e.copy();switch(n){case"era":{let n=e.calendar.getEras(),o=n.indexOf(e.era);if(o<0)throw new Error("Invalid era: "+e.era);o=De(o,x,0,n.length-1,null==r?void 0:r.round),t.era=n[o],se(t);break}case"year":var o,a;(null===(o=(a=t.calendar).isInverseEra)||void 0===o?void 0:o.call(a,t))&&(x=-x),t.year=De(e.year,x,-1/0,9999,null==r?void 0:r.round),t.year===-1/0&&(t.year=1),t.calendar.balanceYearMonth&&t.calendar.balanceYearMonth(t,e);break;case"month":t.month=De(e.month,x,1,e.calendar.getMonthsInYear(e),null==r?void 0:r.round);break;case"day":t.day=De(e.day,x,1,e.calendar.getDaysInMonth(e),null==r?void 0:r.round);break;default:throw new Error("Unsupported field "+n)}return e.calendar.balanceDate&&e.calendar.balanceDate(t),se(t),t}function Se(e,n,x,r){let t=e.copy();switch(n){case"hour":{let n=e.hour,o=0,a=23;if(12===(null==r?void 0:r.hourCycle)){let e=n>=12;o=e?12:0,a=e?23:11}t.hour=De(n,x,o,a,null==r?void 0:r.round);break}case"minute":t.minute=De(e.minute,x,0,59,null==r?void 0:r.round);break;case"second":t.second=De(e.second,x,0,59,null==r?void 0:r.round);break;case"millisecond":t.millisecond=De(e.millisecond,x,0,999,null==r?void 0:r.round);break;default:throw new Error("Unsupported field "+n)}return t}function De(e,n,x,r,t=!1){if(t){(e+=Math.sign(n))<x&&(e=r);let t=Math.abs(n);(e=n>0?Math.ceil(e/t)*t:Math.floor(e/t)*t)>r&&(e=x)}else(e+=n)<x?e=r-(x-e-1):e>r&&(e=x+(e-r-1));return e}function ge(e,n){let x;if(null!=n.years&&0!==n.years||null!=n.months&&0!==n.months||null!=n.weeks&&0!==n.weeks||null!=n.days&&0!==n.days){x=z(oe(ne(e),{years:n.years,months:n.months,weeks:n.weeks,days:n.days}),e.timeZone)}else x=W(e)-e.offset;return x+=n.milliseconds||0,x+=1e3*(n.seconds||0),x+=6e4*(n.minutes||0),x+=36e5*(n.hours||0),xe(ee(x,e.timeZone),e.calendar)}function Ce(e){return`${String(e.hour).padStart(2,"0")}:${String(e.minute).padStart(2,"0")}:${String(e.second).padStart(2,"0")}${e.millisecond?String(e.millisecond/1e3).slice(1):""}`}function pe(e){let n=xe(e,new K);return`${String(n.year).padStart(4,"0")}-${String(n.month).padStart(2,"0")}-${String(n.day).padStart(2,"0")}`}function ve(e){return`${pe(e)}T${Ce(e)}`}function Ie(e){return`${ve(e)}${function(e){let n=Math.sign(e)<0?"-":"+";e=Math.abs(e);let x=Math.floor(e/36e5),r=e%36e5/6e4;return`${n}${String(x).padStart(2,"0")}:${String(r).padStart(2,"0")}`}(e.offset)}[${e.timeZone}]`}function Te(e){let n,x="object"==typeof e[0]?e.shift():new K;if("string"==typeof e[0])n=e.shift();else{let e=x.getEras();n=e[e.length-1]}return[x,n,e.shift(),e.shift(),e.shift()]}var we=new WeakMap;class Be{copy(){return this.era?new Be(this.calendar,this.era,this.year,this.month,this.day):new Be(this.calendar,this.year,this.month,this.day)}add(e){return oe(this,e)}subtract(e){return me(this,e)}set(e){return ue(this,e)}cycle(e,n,x){return Me(this,e,n,x)}toDate(e){return q(this,e)}toString(){return pe(this)}compare(e){return U(this,e)}constructor(...e){G(this,we,{writable:!0,value:void 0});let[n,x,r,t,o]=Te(e);this.calendar=n,this.era=x,this.year=r,this.month=t,this.day=o,se(this)}}var Ee=new WeakMap;class Pe{copy(){return new Pe(this.hour,this.minute,this.second,this.millisecond)}add(e){return fe(this,e)}subtract(e){return function(e,n){return fe(e,le(n))}(this,e)}set(e){return ce(this,e)}cycle(e,n,x){return Se(this,e,n,x)}toString(){return Ce(this)}compare(e){return F(this,e)}constructor(e=0,n=0,x=0,r=0){G(this,Ee,{writable:!0,value:void 0}),this.hour=e,this.minute=n,this.second=x,this.millisecond=r,he(this)}}var Ae=new WeakMap;class Ge{copy(){return this.era?new Ge(this.calendar,this.era,this.year,this.month,this.day,this.hour,this.minute,this.second,this.millisecond):new Ge(this.calendar,this.year,this.month,this.day,this.hour,this.minute,this.second,this.millisecond)}add(e){return oe(this,e)}subtract(e){return me(this,e)}set(e){return ue(ce(this,e),e)}cycle(e,n,x){switch(e){case"era":case"year":case"month":case"day":return Me(this,e,n,x);default:return Se(this,e,n,x)}}toDate(e,n){return q(this,e,n)}toString(){return ve(this)}compare(e){let n=U(this,e);return 0===n?F(this,ne(e)):n}constructor(...e){G(this,Ae,{writable:!0,value:void 0});let[n,x,r,t,o]=Te(e);this.calendar=n,this.era=x,this.year=r,this.month=t,this.day=o,this.hour=e.shift()||0,this.minute=e.shift()||0,this.second=e.shift()||0,this.millisecond=e.shift()||0,se(this)}}var Ne=new WeakMap;class Re{copy(){return this.era?new Re(this.calendar,this.era,this.year,this.month,this.day,this.timeZone,this.offset,this.hour,this.minute,this.second,this.millisecond):new Re(this.calendar,this.year,this.month,this.day,this.timeZone,this.offset,this.hour,this.minute,this.second,this.millisecond)}add(e){return ge(this,e)}subtract(e){return function(e,n){return ge(e,le(n))}(this,e)}set(e,n){return function(e,n,x){let r=ne(e),t=ce(ue(r,n),n);return 0===t.compare(r)?e:xe(ee(z(t,e.timeZone,x),e.timeZone),e.calendar)}(this,e,n)}cycle(e,n,x){return function(e,n,x,r){switch(n){case"hour":{let n=0,t=23;if(12===(null==r?void 0:r.hourCycle)){let x=e.hour>=12;n=x?12:0,t=x?23:11}let o=ne(e),a=xe(ce(o,{hour:n}),new K),d=[z(a,e.timeZone,"earlier"),z(a,e.timeZone,"later")].filter((n=>ee(n,e.timeZone).day===a.day))[0],i=xe(ce(o,{hour:t}),new K),s=[z(i,e.timeZone,"earlier"),z(i,e.timeZone,"later")].filter((n=>ee(n,e.timeZone).day===i.day)).pop(),l=W(e)-e.offset,m=Math.floor(l/te),u=l%te;return l=De(m,x,Math.floor(d/te),Math.floor(s/te),null==r?void 0:r.round)*te+u,xe(ee(l,e.timeZone),e.calendar)}case"minute":case"second":case"millisecond":return Se(e,n,x,r);case"era":case"year":case"month":case"day":return xe(ee(z(Me(ne(e),n,x,r),e.timeZone),e.timeZone),e.calendar);default:throw new Error("Unsupported field "+n)}}(this,e,n,x)}toDate(){return function(e){let n=W(e)-e.offset;return new Date(n)}(this)}toString(){return Ie(this)}toAbsoluteString(){return this.toDate().toISOString()}compare(e){return this.toDate().getTime()-re(e,this.timeZone).toDate().getTime()}constructor(...e){G(this,Ne,{writable:!0,value:void 0});let[n,x,r,t,o]=Te(e),a=e.shift(),d=e.shift();this.calendar=n,this.era=x,this.year=r,this.month=t,this.day=o,this.timeZone=a,this.offset=d,this.hour=e.shift()||0,this.minute=e.shift()||0,this.second=e.shift()||0,this.millisecond=e.shift()||0,se(this)}}let _e=new Map;class $e{format(e){return this.formatter.format(e)}formatToParts(e){return this.formatter.formatToParts(e)}formatRange(e,n){if("function"==typeof this.formatter.formatRange)return this.formatter.formatRange(e,n);if(n<e)throw new RangeError("End date must be >= start date");return`${this.formatter.format(e)} – ${this.formatter.format(n)}`}formatRangeToParts(e,n){if("function"==typeof this.formatter.formatRangeToParts)return this.formatter.formatRangeToParts(e,n);if(n<e)throw new RangeError("End date must be >= start date");let x=this.formatter.formatToParts(e),r=this.formatter.formatToParts(n);return[...x.map((e=>({...e,source:"startRange"}))),{type:"literal",value:" – ",source:"shared"},...r.map((e=>({...e,source:"endRange"})))]}resolvedOptions(){let e=this.formatter.resolvedOptions();return function(){null==Ue&&(Ue="h12"===new Intl.DateTimeFormat("fr",{hour:"numeric",hour12:!1}).resolvedOptions().hourCycle);return Ue}()&&(this.resolvedHourCycle||(this.resolvedHourCycle=function(e,n){if(!n.timeStyle&&!n.hour)return;e=e.replace(/(-u-)?-nu-[a-zA-Z0-9]+/,"");let x=Le(e+=(e.includes("-u-")?"":"-u")+"-nu-latn",{...n,timeZone:void 0}),r=parseInt(x.formatToParts(new Date(2020,2,3,0)).find((e=>"hour"===e.type)).value,10),t=parseInt(x.formatToParts(new Date(2020,2,3,23)).find((e=>"hour"===e.type)).value,10);if(0===r&&23===t)return"h23";if(24===r&&23===t)return"h24";if(0===r&&11===t)return"h11";if(12===r&&11===t)return"h12";throw new Error("Unexpected hour cycle result")}(e.locale,this.options)),e.hourCycle=this.resolvedHourCycle,e.hour12="h11"===this.resolvedHourCycle||"h12"===this.resolvedHourCycle),"ethiopic-amete-alem"===e.calendar&&(e.calendar="ethioaa"),e}constructor(e,n={}){this.formatter=Le(e,n),this.options=n}}const Ye={true:{ja:"h11"},false:{}};function Le(e,n={}){if("boolean"==typeof n.hour12&&function(){null==Ke&&(Ke="24"===new Intl.DateTimeFormat("en-US",{hour:"numeric",hour12:!1}).format(new Date(2020,2,3,0)));return Ke}()){n={...n};let x=Ye[String(n.hour12)][e.split("-")[0]],r=n.hour12?"h12":"h23";n.hourCycle=null!=x?x:r,delete n.hour12}let x=e+(n?Object.entries(n).sort(((e,n)=>e[0]<n[0]?-1:1)).join():"");if(_e.has(x))return _e.get(x);let r=new Intl.DateTimeFormat(e,n);return _e.set(x,r),r}let Ke=null;let Ue=null;const Fe=[{regex:/^(\d{4})\/(0[1-9]|1[0-2])\/(\d{2})$/,yearIndex:1,monthIndex:2,dayIndex:3,format:"YYYY/MM/DD"},{regex:/^(\d{2})\/(0[1-9]|1[0-2])\/(\d{4})$/,yearIndex:3,monthIndex:2,dayIndex:1,format:"DD/MM/YYYY"},{regex:/^(\d{4})\.(0[1-9]|1[0-2])\.(\d{2})$/,yearIndex:1,monthIndex:2,dayIndex:3,format:"YYYY.MM.DD"},{regex:/^(\d{2})-(0[1-9]|1[0-2])-(\d{4})$/,yearIndex:3,monthIndex:2,dayIndex:1,format:"DD-MM-YYYY"},{regex:/^(0[1-9]|1[0-2])\/(\d{2})\/(\d{4})$/,yearIndex:3,monthIndex:1,dayIndex:2,format:"MM/DD/YYYY"},{regex:/^(\d{4})-(0[1-9]|1[0-2])-(\d{2})$/,yearIndex:1,monthIndex:2,dayIndex:3,format:"YYYY-MM-DD"},{regex:/^(\d{4})\.\s*(0[1-9]|1[0-2])\.\s*(\d{2})\.\s*$/,yearIndex:1,monthIndex:2,dayIndex:3,format:"YYYY. MM. DD."},{regex:/^(\d{2})\.(0[1-9]|1[0-2])\.(\d{4})$/,yearIndex:3,monthIndex:2,dayIndex:1,format:"DD.MM.YYYY"},{regex:/^(0[1-9]|1[0-2])\.(\d{2})\.(\d{4})$/,yearIndex:3,monthIndex:1,dayIndex:2,format:"MM.DD.YYYY"},{regex:/^(\d{4})\/(0[1-9]|1[0-2])\/(\d{2}) (\d{2}):(\d{2}):(\d{2})$/,yearIndex:1,monthIndex:2,dayIndex:3,hourIndex:4,minuteIndex:5,secondIndex:6,format:"YYYY/MM/DD HH:MM:SS"},{regex:/^(\d{2})\/(0[1-9]|1[0-2])\/(\d{4}) (\d{2}):(\d{2}):(\d{2})$/,yearIndex:3,monthIndex:2,dayIndex:1,hourIndex:4,minuteIndex:5,secondIndex:6,format:"DD/MM/YYYY HH:MM:SS"},{regex:/^(\d{4})-(0[1-9]|1[0-2])-(\d{2}) (\d{2}):(\d{2}):(\d{2})$/,yearIndex:1,monthIndex:2,dayIndex:3,hourIndex:4,minuteIndex:5,secondIndex:6,format:"YYYY-MM-DD HH:MM:SS"},{regex:/^(\d{2})-(0[1-9]|1[0-2])-(\d{4}) (\d{2}):(\d{2}):(\d{2})$/,yearIndex:3,monthIndex:2,dayIndex:1,hourIndex:4,minuteIndex:5,secondIndex:6,format:"DD-MM-YYYY HH:MM:SS"},{regex:/^(\d{4})\.(0[1-9]|1[0-2])\.(\d{2}) (\d{2}):(\d{2}):(\d{2})$/,yearIndex:1,monthIndex:2,dayIndex:3,hourIndex:4,minuteIndex:5,secondIndex:6,format:"YYYY.MM.DD HH:MM:SS"},{regex:/^(\d{2})\.(0[1-9]|1[0-2])\.(\d{4}) (\d{2}):(\d{2}):(\d{2})$/,yearIndex:3,monthIndex:2,dayIndex:1,hourIndex:4,minuteIndex:5,secondIndex:6,format:"DD.MM.YYYY HH:MM:SS"},{regex:/^(\d{4})-(0[1-9]|1[0-2])-(\d{2})T(\d{2}):(\d{2}):(\d{2})$/,yearIndex:1,monthIndex:2,dayIndex:3,hourIndex:4,minuteIndex:5,secondIndex:6,format:"YYYY-MM-DDTHH:MM:SS"}],Oe=e=>"string"==typeof e?new Date((e=>{for(const n of Fe){const x=e.match(n.regex);if(x){const r=x[n.yearIndex],t=x[n.monthIndex],o=x[n.dayIndex],a=n.hourIndex?x[n.hourIndex]:"00",d=n.minuteIndex?x[n.minuteIndex]:"00",i=n.secondIndex?x[n.secondIndex]:"00";try{const n=new Date(`${r}-${t}-${o}T${a}:${d}:${i}`);if(n.getTime())return n;throw new Error(`Invalid Date! The constructed date from the provided string "${e}" is invalid. Please ensure the date string is correct.`)}catch(n){throw n instanceof Error?new Error(`An error occurred while constructing the date: ${n.message}. Please ensure the date string "${e}" is in a supported format.`):new Error(`An unknown error occurred. Error details: ${n}`)}}}throw new Error(`Date format not recognized. The provided date string "${e}" does not match any supported formats. Please use a recognized date format.`)})(e)):new Date(e);var He=n(((e,n={})=>{var x,r,t,o,a,i,s,l,m,u,c,h,y,b,f,M;const S=d(n),D=Oe(e);let g,C={};switch(n.dateTimeMode){case"dateOnly":C={year:(null===(x=n.intlOptions)||void 0===x?void 0:x.year)||"numeric",month:(null===(r=n.intlOptions)||void 0===r?void 0:r.month)||"numeric",day:(null===(t=n.intlOptions)||void 0===t?void 0:t.day)||"numeric"};break;case"timeOnly":C={hour:(null===(o=n.intlOptions)||void 0===o?void 0:o.hour)||"numeric",minute:(null===(a=n.intlOptions)||void 0===a?void 0:a.minute)||"numeric",second:(null===(i=n.intlOptions)||void 0===i?void 0:i.second)||"numeric"},void 0!==(null===(s=n.intlOptions)||void 0===s?void 0:s.hour12)&&(C.hour12=null===(l=n.intlOptions)||void 0===l?void 0:l.hour12);break;case"dateTime":C={year:(null===(m=n.intlOptions)||void 0===m?void 0:m.year)||"numeric",month:(null===(u=n.intlOptions)||void 0===u?void 0:u.month)||"numeric",day:(null===(c=n.intlOptions)||void 0===c?void 0:c.day)||"numeric",hour:(null===(h=n.intlOptions)||void 0===h?void 0:h.hour)||"numeric",minute:(null===(y=n.intlOptions)||void 0===y?void 0:y.minute)||"numeric",second:(null===(b=n.intlOptions)||void 0===b?void 0:b.second)||"numeric"},void 0!==(null===(f=n.intlOptions)||void 0===f?void 0:f.hour12)&&(C.hour12=null===(M=n.intlOptions)||void 0===M?void 0:M.hour12);break;default:C=Object.assign({},n.intlOptions)}try{g=new $e(S,C)}catch(e){throw e instanceof Error?new Error(`An error occurred while creating the DateFormatter instance: ${e.message}. Please ensure the provided options are valid and try again.`):new Error(`An unknown error occurred. Error details: ${e}`)}return g.format(new Date(D))}));var Ze=n(((e,n={})=>{const x=Oe(e),r=Oe(n.baseDate||new Date),t=d(n),o=(x.getTime()-r.getTime())/1e3,a=3600,i=86400,s=7*i,l=30*i,m=365*i;let u,c,h;Math.abs(o)<60?(u=o,c="second"):Math.abs(o)<a?(u=o/60,c="minute"):Math.abs(o)<i?(u=o/a,c="hour"):Math.abs(o)<s?(u=o/i,c="day"):Math.abs(o)<l?(u=o/s,c="week"):Math.abs(o)<m?(u=o/l,c="month"):(u=o/m,c="year");try{h=new Intl.RelativeTimeFormat(t,n.intlOptions).format(Math.round(u),c)}catch(e){throw e instanceof Error?new Error(`An error occurred while creating the RelativeTimeFormat instance: ${e.message}. Please ensure the provided options are valid and try again.`):new Error(`An unknown error occurred. Error details: ${e}`)}return h}));var We=n((e=>{try{const n=d(e),x=new $e(n,{weekday:e.weekday||"long"});return Array.from({length:7},((e,n)=>x.format(new Date(1970,0,4+n))))}catch(e){throw e instanceof Error?new Error(`An error occurred while creating the DateFormatter instance or formatting the weekdays: ${e.message}. Please ensure the provided options are valid and try again.`):new Error(`An unknown error occurred. Error details: ${e}`)}}));const ke=["day","dayPeriod","era","fractionalSecond","hour","minute","month","relatedYear","second","timeZone","weekday","year","yearName"];var Ve=n(((e,n={})=>{const x=Oe(e),r=d(n);try{const e=new $e(r,n.intlOptions).formatToParts(x),t={};return e.forEach((e=>{ke.includes(e.type)&&(t[e.type]=(t[e.type]||"")+e.value)})),Object.assign(Object.assign({},t),{rawParts:e,formattedDate:e.map((e=>e.value)).join(""),date:x})}catch(e){throw e instanceof Error?new Error(`An error occurred while parsing the date: ${e.message}. Please ensure the provided date and options are valid and try again.`):new Error(`An unknown error occurred. Error details: ${e}`)}}));const je="https://unpkg.com/@razorpay/i18nify-js/lib/assets/flags",Je="https://flagcdn.com",Qe="https://raw.githubusercontent.com/razorpay/i18nify/master/i18nify-data",Xe=["IN","MY","SG","US"],ze=["AD","AE","AF","AG","AI","AL","AM","AO","AQ","AR","AS","AT","AU","AW","AX","AZ","BA","BB","BD","BE","BF","BG","BH","BI","BJ","BL","BM","BN","BO","BQ-BO","BQ-SA","BQ-SE","BQ","BR","BS","BT","BV","BW","BY","BZ","CA","CC","CD","CF","CG","CH","CI","CK","CL","CM","CN","CO","CR","CU","CV","CW","CX","CY","CZ","DE","DJ","DK","DM","DO","DZ","EC","EE","EG","EH","ER","ES","ET","FI","FJ","FK","FM","FO","FR","GA","GB-ENG","GB-NIR","GB-SCT","GB-UKM","GB-WLS","GB","GD","GE","GF","GG","GH","GI","GL","GM","GN","GP","GQ","GR","GS","GT","GU","GW","GY","HK","HM","HN","HR","HT","HU","ID","IE","IL","IM","IN","IO","IQ","IR","IS","IT","JE","JM","JO","JP","KE","KG","KH","KI","KM","KN","KP","KR","KW","KY","KZ","LA","LB","LC","LI","LK","LR","LS","LT","LU","LV","LY","MA","MC","MD","ME","MF","MG","MH","MK","ML","MM","MN","MO","MP","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NU","NZ","OM","PA","PE","PF","PG","PH","PK","PL","PM","PN","PR","PS","PT","PW","PY","QA","RE","RO","RS","RU","RW","SA","SB","SC","SD","SE","SG","SH","SI","SJ","SK","SL","SM","SN","SO","SR","SS","ST","SV","SX","SY","SZ","TC","TD","TF","TG","TH","TJ","TK","TL","TM","TN","TO","TR","TT","TV","TW","TZ","UA","UG","UM","US","UY","UZ","VA","VC","VE","VG","VI","VN","VU","WF","WS","YE","YT-UNF","YT","ZA","ZM","ZW"];var qe=n((e=>{if(!function(e){const n=e.toUpperCase();return ze.includes(n)}(e))throw new Error(`The provided country code is invalid. The received value was: ${e}. Please ensure you pass a valid country code. Check valid country codes here: https://github.com/razorpay/i18nify/blob/master/i18nify-data/country/metadata/data.json`);const n=e.toLowerCase();return{original:`${Je}/${n}.svg`,"4X3":`${je}/${n}.svg`}}));var en=n((()=>{const e={};return ze.map((n=>{const x=n.toLowerCase();e[n]={original:`${Je}/${x}.svg`,"4X3":`${je}/${x}.svg`}})),e}));var nn=n((()=>fetch(`${Qe}/country/metadata/data.json`).then((e=>e.json())).then((e=>e.metadata_information)).catch((e=>{throw new Error(`An error occurred while fetching country metadata. The error details are: ${e.message}.`)}))));var xn=n((e=>{const n=e.toUpperCase();return Xe.includes(n)?fetch(`${Qe}/country/subdivisions/${n}.json`).then((e=>e.json())).then((e=>e.states)).catch((e=>{throw new Error(`An error occurred while fetching state data. The error details are: ${e.message}.`)})):Promise.reject(new Error(`Invalid country code: ${n}. Please ensure you provide a valid country code. Check valid country codes here: https://github.com/razorpay/i18nify/blob/master/i18nify-data/country/metadata/data.json`))}));var rn=n(((e,n)=>{const x=e.toUpperCase(),r=n&&n.toUpperCase();return Xe.includes(x)?fetch(`${Qe}/country/subdivisions/${x}.json`).then((e=>e.json())).then((e=>r?e.states[r]?e.states[r].cities:Promise.reject(new Error(`State code ${r} is missing in ${x}. Please ensure you provide a valid state code that exists within the specified country.`)):Object.keys(e.states).reduce(((n,x)=>n=[...n,...e.states[x].cities]),[]))).catch((e=>{throw new Error(`An error occurred while fetching city data. The error details are: ${e.message}.`)})):Promise.reject(new Error(`Invalid country code: ${x}. Please ensure you provide a valid country code. Check valid country codes here: https://github.com/razorpay/i18nify/blob/master/i18nify-data/country/metadata/data.json`))}));function tn(e,n){const x=e.states[n].cities.reduce(((e,n)=>[...e,...n.zipcodes]),[]);return[...new Set(x)]}var on=n(((e,n)=>{const x=e.toUpperCase(),r=n&&n.toUpperCase();return Xe.includes(x)?fetch(`${Qe}/country/subdivisions/${x}.json`).then((e=>e.json())).then((e=>r?e.states[r]?tn(e,r):Promise.reject(`State code ${r} is missing in ${x}. Please ensure you provide a valid state code that exists within the specified country. Check valid state codes and country codes here: https://github.com/razorpay/i18nify/blob/master/i18nify-data/country/metadata/data.json`):Object.keys(e.states).reduce(((n,x)=>[...n,...tn(e,x)]),[]))).catch((e=>{throw new Error(`An error occurred while fetching zipcode data. The error details are: ${e}.`)})):Promise.reject(new Error(`Invalid country code: ${x}. Please ensure you provide a valid country code.`))}));export{Be as CalendarDate,Ge as CalendarDateTime,E as MaskingStyle,Pe as Time,Re as ZonedDateTime,f as convertToMajorUnit,M as convertToMinorUnit,He as formatDateTime,c as formatNumber,b as formatNumberByParts,T as formatPhoneNumber,nn as getAllCountries,rn as getCities,h as getCurrencyList,y as getCurrencySymbol,P as getDialCodeByCountryCode,B as getDialCodes,qe as getFlagOfCountry,en as getFlagsForAllCountries,A as getMaskedPhoneNumber,Ze as getRelativeTime,t as getState,xn as getStates,We as getWeekdays,on as getZipcodes,v as isValidPhoneNumber,Ve as parseDateTime,w as parsePhoneNumber,a as resetState,o as setState};
//# sourceMappingURL=index.min.js.map
